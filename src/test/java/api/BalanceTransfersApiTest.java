/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import invoker.ApiException;
import invoker.Environment;
import invoker.FinixClient;
import model.*;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for BalanceTransfersApi
 */
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
@DisplayName("When Running BalanceTransfersApiTest")
@Disabled
public class BalanceTransfersApiTest {
    private FinixClient finixClient;

    private final BalanceTransfersApi api = new BalanceTransfersApi();

    @Test
    @BeforeAll
    void contextLoads() {
        finixClient= new FinixClient("USbkjk46XqUTQHN3i2jaVnc1","ac915962-2757-49ea-aeee-10960a408b99", Environment.SANDBOX);
        assertEquals(true , finixClient!=null);

    }
    /**
     * Create a Balance Transfer
     *
     * Create a &#x60;balance_transfer&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @DisplayName("Create a Balance Transfer")
    public void createBalanceTransferTest() throws ApiException {
        CreateBalanceTransferRequest createBalanceTransferRequest = CreateBalanceTransferRequest.builder()
                .description("Need to increase buffer given the high number of NSFs on merchant fee debits")
                .tags(Map.of("example", "documentation tag"))
                .destination("FOR_BENEFIT_OF_ACCOUNT")
                .currency(Currency.USD)
                .amount(4000L)
                .source("OPERATING_ACCOUNT")
                .processorType("LITLE_V1")
                .build();
        BalanceTransfer response = finixClient.BalanceTransfers.createBalanceTransfer(createBalanceTransferRequest);
        // TODO: test validations
    }

    /**
     * Get a Balance Transfer
     *
     * Retrieve the details of a &#x60;balance_transfer&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @DisplayName("Get a Balance Transfer")
    public void getBalanceTransfersTest() throws ApiException {
        String balanceTransfersId = "BT_v3KQqgpDPqskH8VH6isFyz";
        BalanceTransfer response = finixClient.BalanceTransfers.getBalanceTransfers(balanceTransfersId);
        // TODO: test validations
    }

    /**
     * List Balance Transfers
     *
     * Retrieve a list of &#x60;balance_transfers&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    @DisplayName("List Balance Transfers")
    public void listBalanceTransfersTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String createdAtGte = null;
        String createdAtLte = null;
        String updatedAtGte = null;
        String updatedAtLte = null;
        String idempotencyId = null;
        Integer amount = null;
        String description = null;
        String destination = null;
        String externalReferenceId = null;
        String referenceId = null;
        String source = null;
        BalanceTransferList response = finixClient.BalanceTransfers.listBalanceTransfers(limit, offset, pageNumber, pageSize, createdAtGte, createdAtLte, updatedAtGte, updatedAtLte, idempotencyId, amount, description, destination, externalReferenceId, referenceId, source);
        // TODO: test validations
    }

}
