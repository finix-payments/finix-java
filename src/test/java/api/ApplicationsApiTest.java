/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import invoker.ApiException;
import model.Application;
import model.ApplicationProfile;
import model.ApplicationsList;
import model.CreateApplicationRequest;
import model.Error401Unauthorized;
import model.Error403ForbiddenList;
import model.Error404NotFoundList;
import model.Error406NotAcceptable;
import model.ErrorGeneric;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationsApi
 */
@Disabled
public class ApplicationsApiTest {

    private final ApplicationsApi api = new ApplicationsApi();

    /**
     * Create an Application
     *
     * If created successfully, return 201 status and add a location header to the response which refers to the new created application. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createApplicationTest() throws ApiException {
        CreateApplicationRequest createApplicationRequest = null;
        Application response = api.create(createApplicationRequest);
        // TODO: test validations
    }

    /**
     * Fetch an application
     *
     * Fetch an application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApplicationTest() throws ApiException {
        String applicationId = null;
        Application response = api.get(applicationId);
        // TODO: test validations
    }

    /**
     * Get Application Application Profile
     *
     * Show the application profile
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApplicationApplicationProfileTest() throws ApiException {
        String applicationId = null;
        ApplicationProfile response = api.getApplicationProfile(applicationId);
        // TODO: test validations
    }

    /**
     * List Applications
     *
     * Return a collection of Applications, if there are no Applications, an empty collection will be returned. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listApplicationsTest() throws ApiException {
        String id = null;
        String sort = null;
        Integer offset = null;
        Integer limit = null;
        ApplicationsList response = api.list(id, sort, offset, limit);
        // TODO: test validations
    }

    /**
     * Put Application
     *
     * Update an existing application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putApplicationTest() throws ApiException {
        String applicationId = null;
        Application response = api.update(applicationId);
        // TODO: test validations
    }

}
