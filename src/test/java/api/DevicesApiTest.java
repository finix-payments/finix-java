/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import invoker.ApiException;
import invoker.Environment;
import invoker.FinixClient;
import model.*;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for DevicesApi
 */
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
@DisplayName("When Running DevicesApiTest")
@Disabled
public class DevicesApiTest {
    private FinixClient finixClient;

    private final DevicesApi api = new DevicesApi();

    @Test
    @BeforeAll
    void contextLoads() {
        finixClient= new FinixClient("USsRhsHYZGBPnQw8CByJyEQW","8a14c2f9-d94b-4c72-8f5c-a62908e5b30e", Environment.SANDBOX);
        assertEquals(true , finixClient!=null);

    }

    /**
     * Create a Device
     *
     * Create a &#x60;Device&#x60; under a &#x60;Merchant&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMerchantDeviceTest() throws ApiException {
        String merchantId = "MUu56ZGx3Xb6U9gAqKfgNisd";
        CreateDevice createDevice = CreateDevice.builder()
                .name("Finix  triPOS #1")
                .model(CreateDevice.ModelEnum.MX915)
                .description("Mike Jones")
                ._configuration(ConfigurationDetails.builder()
                        .allowDebit(true)
                        .promptSignature("NEVER")
                        .build())
                .build();
        Device response = finixClient.Devices.create(merchantId, createDevice);
        // TODO: test validations
    }

    /**
     * Get Device
     *
     * Retrieve the details of an existing &#x60;Device&#x60;.  To check the connectivity of the device, include &#x60;?include_connection\\&#x3D;true \\&#x60; at the end of the request endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeviceTest() throws ApiException {
        String deviceId = "DVf2H8sh4LZZC52GTUrwCPPf";
        Device response = finixClient.Devices.get(deviceId);
        // TODO: test validations
    }

    /**
     * Update a Device
     *
     * Update a &#x60;Device&#x60; to activate or deactivate it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putDeviceTest() throws ApiException {
        String deviceId = null;
        Object body = null;
        Device response = api.update(deviceId, body);
        // TODO: test validations
    }

}
