/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import invoker.ApiException;
import model.CreateFeeRequest;
import model.Error401Unauthorized;
import model.Error403ForbiddenList;
import model.Error404NotFoundList;
import model.Error406NotAcceptable;
import model.Fee;
import model.FeesList;
import model.TransfersList;
import model.UpdateFeeRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FeesApi
 */
@Disabled
public class FeesApiTest {

    private final FeesApi api = new FeesApi();

    /**
     * Create a custom fee
     *
     * Create a custom fee
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFeesTest() throws ApiException {
        CreateFeeRequest createFeeRequest = null;
        Fee response = api.create(createFeeRequest);
        // TODO: test validations
    }

    /**
     * Get fee
     *
     * Find an existing fee by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeeTest() throws ApiException {
        String feeId = null;
        Fee response = api.get(feeId);
        // TODO: test validations
    }

    /**
     * List Fees
     *
     * Return a collection of fees
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFeesTest() throws ApiException {
        FeesList response = api.list();
        // TODO: test validations
    }

    /**
     * List Transfer Fees
     *
     * Get list of all the fees in the transfers object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTransferFeesTest() throws ApiException {
        String transferId = null;
        Integer limit = null;
        Long offset = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        Boolean sortSorted = null;
        Boolean sortUnsorted = null;
        TransfersList response = api.listByTransferId(transferId, limit, offset, pageNumber, pageSize, sortSorted, sortUnsorted);
        // TODO: test validations
    }

    /**
     * Update Fee
     *
     * Merge update the fee
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFeeTest() throws ApiException {
        String feeId = null;
        UpdateFeeRequest updateFeeRequest = null;
        Fee response = api.update(feeId, updateFeeRequest);
        // TODO: test validations
    }

}
