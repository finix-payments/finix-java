/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-02-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import invoker.ApiException;
import invoker.Environment;
import invoker.FinixClient;
import model.*;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for FeeProfilesApi
 */
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
@DisplayName("When Running FeeProfilesApiTest")
public class FeeProfilesApiTest {
    private FinixClient finixClient;
    private String feeProfileId;
    private TestInfo testInfo;
    private TestReporter testReporter;
    @BeforeEach
    void init(TestInfo testInfo, TestReporter testReporter){
        this.testInfo =testInfo;
        this.testReporter =testReporter;
        testReporter.publishEntry("Running "+testInfo.getDisplayName()+ " with tag " + testInfo.getTags());
    }

    /**
     * Create a Context Loads
     */
    @Test
    @BeforeAll
    @DisplayName("Finix Client")
    void contextLoads() {
        finixClient= new FinixClient("USimz3zSq5R2PqiEBXY6rSiJ","8bacba32-9550-48ff-b567-fe7648947041", Environment.SANDBOX);
        assertEquals(true , finixClient!=null);

    }
    /**
     * Create a Fee Profile
     *
     * Create fee profiles
     *
     * @throws ApiException if the Api call fails
     *
     **
     * EDITED
     * Test Function Name Generations from OPENAPI Spec with x-java-method-name
     *
     */
    @Test
    @DisplayName("Create a Fee Profile")
    @Order(1)
    public void createFeeProfileTest() throws ApiException {
        Map<String,String> localMap = new HashMap<>();
        localMap.put("app pricing", "simple");

        CreateFeeProfileRequest createFeeProfileRequest = CreateFeeProfileRequest.builder()
                .achFixedFee(30L)
                .basisPoints(200L)
                .application("APmuwPBaW8pVcwb4vCTHQH32")
                .tags(localMap)
                .chargeInterchange(false)
                .fixedFee(100L)
                .achBasisPoints(300L)
                .build();
        FeeProfile response = finixClient.FeeProfiles.create(createFeeProfileRequest);

        feeProfileId = response.getId();
        assertEquals(response.getAchBasisPoints(), 300L, "Response should return ach_basis_points with value of 300 but returns" + response.getAchBasisPoints() );
        assertEquals(response.getApplication(), "APmuwPBaW8pVcwb4vCTHQH32", "Response should return application of 'APmuwPBaW8pVcwb4vCTHQH32' but returns" + response.getApplication() );

    }

    /**
     * Fetch a Fee Profile
     *
     * Get fee profile
     *
     * @throws ApiException if the Api call fails
     *
     **
     * EDITED
     * Test Function Name Generations from OPENAPI Spec with x-java-method-name
     *
     */
    @Test
    @DisplayName("Fetch a Fee Profile")
    @Order(2)
    public void getFeeProfileTest() throws ApiException {

        FeeProfile response = finixClient.FeeProfiles.get(feeProfileId);

        assertEquals(response.getId(), feeProfileId, "Response should return fee profile id of "+ feeProfileId + " but returns "+ response.getId());
    }

    /**
     * List Fee Profiles
     *
     * Get all fee profiles
     *
     * @throws ApiException if the Api call fails
     *
     **
     * EDITED
     * Test Function Name Generations from OPENAPI Spec with x-java-method-name
     *
     */
    @Test
    public void listFeeProfilesTest() throws ApiException {
        Long limit = 20L;

        FeeProfilesList response = finixClient.FeeProfiles.list(ListFeeProfilesQueryParams.builder()
                .limit(limit)
                .build());

        assertEquals(response.getPage().getLimit(), limit, "Response should return page limit of "+limit+" but returns "+response.getPage().getLimit());
        // TODO: test validations
    }

}
