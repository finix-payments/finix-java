/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



package api;

import invoker.ApiException;
import invoker.Environment;
import invoker.FinixClient;
import model.*;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;


/**
 * API tests for WebhooksApi
 */

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
@DisplayName("When Running WebhooksApiTest")
public class WebhooksApiTest {

    private FinixClient finixClient;
    private final WebhooksApi api = new WebhooksApi();
    @Test
    @BeforeAll
    @DisplayName("Finix Client")
    void contextLoads() {
        finixClient= new FinixClient("USsRhsHYZGBPnQw8CByJyEQW","8a14c2f9-d94b-4c72-8f5c-a62908e5b30e", Environment.SANDBOX);
        //  System.out.println(finixClient == null);
        assertEquals(true , finixClient!=null);

    }

    /**
     * Create a Webhook
     *
     * Create a &#x60;Webhook&#x60; to specify an endpoint where Finix can send events.
     *
     * @throws ApiException if the Api call fails
     */

    @Test
    @DisplayName("Create a Webhook")
    public void createWebhookTest() throws ApiException {
        CreateWebhookRequest createWebhookRequest = CreateWebhookRequest.builder()
                .url("https://eohzjuj2prziycz.m.pipedream.net")
                .build();
        Webhook response = finixClient.Webhooks.create(createWebhookRequest);
        // TODO: test validations
    }


    /**
     * Get a Webhook
     *
     * Retrieve the details of a &#x60;Webhook&#x60;.
     *
     * @throws ApiException if the Api call fails
     */

    @Test
    @DisplayName("Get a Webhook")
    public void getWebhookTest() throws ApiException {
        String webhookId = "WHED2RM5dbNKcHYc3ALxhbW";
        Webhook response = finixClient.Webhooks.get(webhookId);
        // TODO: test validations
    }

    /**
     * List Application Webhooks
     *
     * Return a collection of webhooks, if there are no webhooks, an empty collection will be returned. 
     *
     * @throws ApiException if the Api call fails
     */

  //  @Test
    public void listApplicationWebhooksTest() throws ApiException {
        String applicationId = null;
        WebhooksList response = finixClient.Webhooks.listByApplicationId(applicationId);
        // TODO: test validations
    }


    /**
     * List Webhooks
     *
     * Retrieve a list of &#x60;Webhook&#x60; endpoints.
     *
     * @throws ApiException if the Api call fails
     */

    @Test
    @DisplayName("List Webhooks")
    public void listWebhooksTest() throws ApiException {
        //String id = null;
        WebhooksList response = finixClient.Webhooks.list();
        System.out.println(response.toString());
        // TODO: test validations
    }


    /**
     * Update a Webhook
     *
     * Update an existing &#x60;Webhook&#x60;.
     *
     * @throws ApiException if the Api call fails
     */

    @Test
    @DisplayName("Update a Webhook")
    public void putWebhookTest() throws ApiException {
        String webhookId = "WHED2RM5dbNKcHYc3ALxhbW";
        UpdateWebhookRequest updateWebhookRequest = UpdateWebhookRequest.builder()
                .url("https://eohzjuj2prziycz.m.pipedream.net")
                .enabled(false)
                .build();
        Webhook response = finixClient.Webhooks.update(webhookId, updateWebhookRequest);
        // TODO: test validations
    }

}

