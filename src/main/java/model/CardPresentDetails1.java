/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import model.EmvDetails;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import invoker.JSON;

/**
 * CardPresentDetails1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-27T11:05:36.428255-05:00[America/Chicago]")
public class CardPresentDetails1 {
  public static final String SERIALIZED_NAME_APPROVAL_CODE = "approval_code";
  @SerializedName(SERIALIZED_NAME_APPROVAL_CODE)
  private String approvalCode;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private String brand;

  public static final String SERIALIZED_NAME_EMV_DATA = "emv_data";
  @SerializedName(SERIALIZED_NAME_EMV_DATA)
  private EmvDetails emvData;

  public static final String SERIALIZED_NAME_ENTRY_MODE = "entry_mode";
  @SerializedName(SERIALIZED_NAME_ENTRY_MODE)
  private String entryMode;

  public static final String SERIALIZED_NAME_MASKED_ACCOUNT_NUMBER = "masked_account_number";
  @SerializedName(SERIALIZED_NAME_MASKED_ACCOUNT_NUMBER)
  private String maskedAccountNumber;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PAYMENT_TYPE = "payment_type";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TYPE)
  private String paymentType;

  public CardPresentDetails1() { 
  }

  public CardPresentDetails1 approvalCode(String approvalCode) {
    
    this.approvalCode = approvalCode;
    return this;
  }

   /**
   * Get approvalCode
   * @return approvalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApprovalCode() {
    return approvalCode;
  }


  public void setApprovalCode(String approvalCode) {
    this.approvalCode = approvalCode;
  }


  public CardPresentDetails1 brand(String brand) {
    
    this.brand = brand;
    return this;
  }

   /**
   * Get brand
   * @return brand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBrand() {
    return brand;
  }


  public void setBrand(String brand) {
    this.brand = brand;
  }


  public CardPresentDetails1 emvData(EmvDetails emvData) {
    
    this.emvData = emvData;
    return this;
  }

   /**
   * Get emvData
   * @return emvData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmvDetails getEmvData() {
    return emvData;
  }


  public void setEmvData(EmvDetails emvData) {
    this.emvData = emvData;
  }


  public CardPresentDetails1 entryMode(String entryMode) {
    
    this.entryMode = entryMode;
    return this;
  }

   /**
   * Get entryMode
   * @return entryMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEntryMode() {
    return entryMode;
  }


  public void setEntryMode(String entryMode) {
    this.entryMode = entryMode;
  }


  public CardPresentDetails1 maskedAccountNumber(String maskedAccountNumber) {
    
    this.maskedAccountNumber = maskedAccountNumber;
    return this;
  }

   /**
   * Get maskedAccountNumber
   * @return maskedAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaskedAccountNumber() {
    return maskedAccountNumber;
  }


  public void setMaskedAccountNumber(String maskedAccountNumber) {
    this.maskedAccountNumber = maskedAccountNumber;
  }


  public CardPresentDetails1 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CardPresentDetails1 paymentType(String paymentType) {
    
    this.paymentType = paymentType;
    return this;
  }

   /**
   * Get paymentType
   * @return paymentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentType() {
    return paymentType;
  }


  public void setPaymentType(String paymentType) {
    this.paymentType = paymentType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardPresentDetails1 cardPresentDetails1 = (CardPresentDetails1) o;
    return Objects.equals(this.approvalCode, cardPresentDetails1.approvalCode) &&
        Objects.equals(this.brand, cardPresentDetails1.brand) &&
        Objects.equals(this.emvData, cardPresentDetails1.emvData) &&
        Objects.equals(this.entryMode, cardPresentDetails1.entryMode) &&
        Objects.equals(this.maskedAccountNumber, cardPresentDetails1.maskedAccountNumber) &&
        Objects.equals(this.name, cardPresentDetails1.name) &&
        Objects.equals(this.paymentType, cardPresentDetails1.paymentType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvalCode, brand, emvData, entryMode, maskedAccountNumber, name, paymentType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardPresentDetails1 {\n");
    sb.append("    approvalCode: ").append(toIndentedString(approvalCode)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    emvData: ").append(toIndentedString(emvData)).append("\n");
    sb.append("    entryMode: ").append(toIndentedString(entryMode)).append("\n");
    sb.append("    maskedAccountNumber: ").append(toIndentedString(maskedAccountNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approval_code");
    openapiFields.add("brand");
    openapiFields.add("emv_data");
    openapiFields.add("entry_mode");
    openapiFields.add("masked_account_number");
    openapiFields.add("name");
    openapiFields.add("payment_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CardPresentDetails1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CardPresentDetails1.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CardPresentDetails1 is not found in the empty JSON string", CardPresentDetails1.openapiRequiredFields.toString()));
        }
      }
     /* 

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CardPresentDetails1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CardPresentDetails1` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      */
      if (jsonObj.get("approval_code") != null && !jsonObj.get("approval_code").isJsonNull()  && !jsonObj.get("approval_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approval_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approval_code").toString()));
      }
      if (jsonObj.get("brand") != null && !jsonObj.get("brand").isJsonNull()  && !jsonObj.get("brand").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand").toString()));
      }
      // validate the optional field `emv_data`
      if (jsonObj.getAsJsonObject("emv_data") != null) {
       EmvDetails.validateJsonObject(jsonObj.getAsJsonObject("emv_data"));
      }
      if (jsonObj.get("entry_mode") != null && !jsonObj.get("entry_mode").isJsonNull()  && !jsonObj.get("entry_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entry_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entry_mode").toString()));
      }
      if (jsonObj.get("masked_account_number") != null && !jsonObj.get("masked_account_number").isJsonNull()  && !jsonObj.get("masked_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `masked_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("masked_account_number").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()  && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("payment_type") != null && !jsonObj.get("payment_type").isJsonNull()  && !jsonObj.get("payment_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_type").toString()));
      }
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CardPresentDetails1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CardPresentDetails1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CardPresentDetails1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CardPresentDetails1.class));

       return (TypeAdapter<T>) new TypeAdapter<CardPresentDetails1>() {
           @Override
           public void write(JsonWriter out, CardPresentDetails1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CardPresentDetails1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CardPresentDetails1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CardPresentDetails1
  * @throws IOException if the JSON string is invalid with respect to CardPresentDetails1
  */
  public static CardPresentDetails1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CardPresentDetails1.class);
  }

 /**
  * Convert an instance of CardPresentDetails1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

