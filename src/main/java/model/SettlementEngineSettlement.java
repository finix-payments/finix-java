/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import model.Currency;
import model.SettlementEngineSettlementLinks;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import invoker.JSON;

/**
 * SettlementEngineSettlement
 */
@lombok.Builder@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-03T16:00:09.531596-05:00[America/Chicago]")
public class SettlementEngineSettlement {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_ADJUSTMENT_CREDIT_AMOUNT = "adjustment_credit_amount";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_CREDIT_AMOUNT)
  private BigDecimal adjustmentCreditAmount;

  public static final String SERIALIZED_NAME_ADJUSTMENT_CREDIT_COUNT = "adjustment_credit_count";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_CREDIT_COUNT)
  private BigDecimal adjustmentCreditCount;

  public static final String SERIALIZED_NAME_ADJUSTMENT_DEBIT_AMOUNT = "adjustment_debit_amount";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_DEBIT_AMOUNT)
  private BigDecimal adjustmentDebitAmount;

  public static final String SERIALIZED_NAME_ADJUSTMENT_DEBIT_COUNT = "adjustment_debit_count";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_DEBIT_COUNT)
  private BigDecimal adjustmentDebitCount;

  public static final String SERIALIZED_NAME_APPLICATION = "application";
  @SerializedName(SERIALIZED_NAME_APPLICATION)
  private String application;

  public static final String SERIALIZED_NAME_AUTO_CLOSE_TIME = "auto_close_time";
  @SerializedName(SERIALIZED_NAME_AUTO_CLOSE_TIME)
  private OffsetDateTime autoCloseTime;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Currency currency;

  public static final String SERIALIZED_NAME_DISPUTE_CREDIT_AMOUNT = "dispute_credit_amount";
  @SerializedName(SERIALIZED_NAME_DISPUTE_CREDIT_AMOUNT)
  private BigDecimal disputeCreditAmount;

  public static final String SERIALIZED_NAME_DISPUTE_CREDIT_COUNT = "dispute_credit_count";
  @SerializedName(SERIALIZED_NAME_DISPUTE_CREDIT_COUNT)
  private BigDecimal disputeCreditCount;

  public static final String SERIALIZED_NAME_DISPUTE_DEBIT_AMOUNT = "dispute_debit_amount";
  @SerializedName(SERIALIZED_NAME_DISPUTE_DEBIT_AMOUNT)
  private BigDecimal disputeDebitAmount;

  public static final String SERIALIZED_NAME_DISPUTE_DEBIT_COUNT = "dispute_debit_count";
  @SerializedName(SERIALIZED_NAME_DISPUTE_DEBIT_COUNT)
  private BigDecimal disputeDebitCount;

  public static final String SERIALIZED_NAME_EXCEPTION = "exception";
  @SerializedName(SERIALIZED_NAME_EXCEPTION)
  private Boolean exception;

  public static final String SERIALIZED_NAME_FEE_COUNT = "fee_count";
  @SerializedName(SERIALIZED_NAME_FEE_COUNT)
  private BigDecimal feeCount;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private String identity;

  public static final String SERIALIZED_NAME_MERCHANT = "merchant";
  @SerializedName(SERIALIZED_NAME_MERCHANT)
  private String merchant;

  public static final String SERIALIZED_NAME_PAYOUT_PLAN = "payout_plan";
  @SerializedName(SERIALIZED_NAME_PAYOUT_PLAN)
  private String payoutPlan;

  public static final String SERIALIZED_NAME_PROCESSOR_TYPE = "processor_type";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_TYPE)
  private String processorType;

  public static final String SERIALIZED_NAME_REVERSE_AMOUNT = "reverse_amount";
  @SerializedName(SERIALIZED_NAME_REVERSE_AMOUNT)
  private BigDecimal reverseAmount;

  public static final String SERIALIZED_NAME_REVERSE_COUNT = "reverse_count";
  @SerializedName(SERIALIZED_NAME_REVERSE_COUNT)
  private BigDecimal reverseCount;

  /**
   * Gets or Sets scheduleType
   */
  @JsonAdapter(ScheduleTypeEnum.Adapter.class)
  public enum ScheduleTypeEnum {
    DAILY("DAILY"),
    
    MONTHLY("MONTHLY"),
    
    CONTINUOUS("CONTINUOUS");

    private String value;

    ScheduleTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScheduleTypeEnum fromValue(String value) {
      for (ScheduleTypeEnum b : ScheduleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ScheduleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScheduleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScheduleTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScheduleTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "schedule_type";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private ScheduleTypeEnum scheduleType;

  public static final String SERIALIZED_NAME_SETTLEMENT_GROUP = "settlement_group";
  @SerializedName(SERIALIZED_NAME_SETTLEMENT_GROUP)
  private String settlementGroup;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    APPROVED("APPROVED"),
    
    AWAITING_APPROVAL("AWAITING_APPROVAL"),
    
    CANCELLED("CANCELLED"),
    
    PENDING("PENDING"),
    
    STAGED("STAGED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "total_amount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private BigDecimal totalAmount;

  public static final String SERIALIZED_NAME_TOTAL_FEE_AMOUNT = "total_fee_amount";
  @SerializedName(SERIALIZED_NAME_TOTAL_FEE_AMOUNT)
  private BigDecimal totalFeeAmount;

  public static final String SERIALIZED_NAME_TRANSFER_CREDIT_AMOUNT = "transfer_credit_amount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_CREDIT_AMOUNT)
  private BigDecimal transferCreditAmount;

  public static final String SERIALIZED_NAME_TRANSFER_CREDIT_COUNT = "transfer_credit_count";
  @SerializedName(SERIALIZED_NAME_TRANSFER_CREDIT_COUNT)
  private BigDecimal transferCreditCount;

  public static final String SERIALIZED_NAME_TRANSFER_DEBIT_AMOUNT = "transfer_debit_amount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_DEBIT_AMOUNT)
  private BigDecimal transferDebitAmount;

  public static final String SERIALIZED_NAME_TRANSFER_DEBIT_COUNT = "transfer_debit_count";
  @SerializedName(SERIALIZED_NAME_TRANSFER_DEBIT_COUNT)
  private BigDecimal transferDebitCount;

  public static final String SERIALIZED_NAME_WINDOW_END = "window_end";
  @SerializedName(SERIALIZED_NAME_WINDOW_END)
  private OffsetDateTime windowEnd;

  public static final String SERIALIZED_NAME_WINDOW_START = "window_start";
  @SerializedName(SERIALIZED_NAME_WINDOW_START)
  private OffsetDateTime windowStart;

  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private SettlementEngineSettlementLinks links;

  public SettlementEngineSettlement() { 
  }

  public SettlementEngineSettlement tags(Map<String, String> tags) {
    
    this.tags = tags;
    return this;
  }

  public SettlementEngineSettlement putTagsItem(String key, String tagsItem) {
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Key value pair for annotating custom meta data (e.g. order numbers).
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Key value pair for annotating custom meta data (e.g. order numbers).")

  public Map<String, String> getTags() {
    return tags;
  }


  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public SettlementEngineSettlement id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the resource.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The ID of the resource.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SettlementEngineSettlement createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp of when the object was created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Timestamp of when the object was created")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public SettlementEngineSettlement updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp of when the object was last updated
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Timestamp of when the object was last updated")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SettlementEngineSettlement adjustmentCreditAmount(BigDecimal adjustmentCreditAmount) {
    
    this.adjustmentCreditAmount = adjustmentCreditAmount;
    return this;
  }

   /**
   * Get adjustmentCreditAmount
   * @return adjustmentCreditAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getAdjustmentCreditAmount() {
    return adjustmentCreditAmount;
  }


  public void setAdjustmentCreditAmount(BigDecimal adjustmentCreditAmount) {
    this.adjustmentCreditAmount = adjustmentCreditAmount;
  }


  public SettlementEngineSettlement adjustmentCreditCount(BigDecimal adjustmentCreditCount) {
    
    this.adjustmentCreditCount = adjustmentCreditCount;
    return this;
  }

   /**
   * Get adjustmentCreditCount
   * @return adjustmentCreditCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getAdjustmentCreditCount() {
    return adjustmentCreditCount;
  }


  public void setAdjustmentCreditCount(BigDecimal adjustmentCreditCount) {
    this.adjustmentCreditCount = adjustmentCreditCount;
  }


  public SettlementEngineSettlement adjustmentDebitAmount(BigDecimal adjustmentDebitAmount) {
    
    this.adjustmentDebitAmount = adjustmentDebitAmount;
    return this;
  }

   /**
   * Get adjustmentDebitAmount
   * @return adjustmentDebitAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getAdjustmentDebitAmount() {
    return adjustmentDebitAmount;
  }


  public void setAdjustmentDebitAmount(BigDecimal adjustmentDebitAmount) {
    this.adjustmentDebitAmount = adjustmentDebitAmount;
  }


  public SettlementEngineSettlement adjustmentDebitCount(BigDecimal adjustmentDebitCount) {
    
    this.adjustmentDebitCount = adjustmentDebitCount;
    return this;
  }

   /**
   * Get adjustmentDebitCount
   * @return adjustmentDebitCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getAdjustmentDebitCount() {
    return adjustmentDebitCount;
  }


  public void setAdjustmentDebitCount(BigDecimal adjustmentDebitCount) {
    this.adjustmentDebitCount = adjustmentDebitCount;
  }


  public SettlementEngineSettlement application(String application) {
    
    this.application = application;
    return this;
  }

   /**
   * The ID of the resource.
   * @return application
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The ID of the resource.")

  public String getApplication() {
    return application;
  }


  public void setApplication(String application) {
    this.application = application;
  }


  public SettlementEngineSettlement autoCloseTime(OffsetDateTime autoCloseTime) {
    
    this.autoCloseTime = autoCloseTime;
    return this;
  }

   /**
   * Get autoCloseTime
   * @return autoCloseTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getAutoCloseTime() {
    return autoCloseTime;
  }


  public void setAutoCloseTime(OffsetDateTime autoCloseTime) {
    this.autoCloseTime = autoCloseTime;
  }


  public SettlementEngineSettlement currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getCurrency() {
    return currency;
  }


  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


  public SettlementEngineSettlement disputeCreditAmount(BigDecimal disputeCreditAmount) {
    
    this.disputeCreditAmount = disputeCreditAmount;
    return this;
  }

   /**
   * Get disputeCreditAmount
   * @return disputeCreditAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDisputeCreditAmount() {
    return disputeCreditAmount;
  }


  public void setDisputeCreditAmount(BigDecimal disputeCreditAmount) {
    this.disputeCreditAmount = disputeCreditAmount;
  }


  public SettlementEngineSettlement disputeCreditCount(BigDecimal disputeCreditCount) {
    
    this.disputeCreditCount = disputeCreditCount;
    return this;
  }

   /**
   * Get disputeCreditCount
   * @return disputeCreditCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDisputeCreditCount() {
    return disputeCreditCount;
  }


  public void setDisputeCreditCount(BigDecimal disputeCreditCount) {
    this.disputeCreditCount = disputeCreditCount;
  }


  public SettlementEngineSettlement disputeDebitAmount(BigDecimal disputeDebitAmount) {
    
    this.disputeDebitAmount = disputeDebitAmount;
    return this;
  }

   /**
   * Get disputeDebitAmount
   * @return disputeDebitAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDisputeDebitAmount() {
    return disputeDebitAmount;
  }


  public void setDisputeDebitAmount(BigDecimal disputeDebitAmount) {
    this.disputeDebitAmount = disputeDebitAmount;
  }


  public SettlementEngineSettlement disputeDebitCount(BigDecimal disputeDebitCount) {
    
    this.disputeDebitCount = disputeDebitCount;
    return this;
  }

   /**
   * Get disputeDebitCount
   * @return disputeDebitCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getDisputeDebitCount() {
    return disputeDebitCount;
  }


  public void setDisputeDebitCount(BigDecimal disputeDebitCount) {
    this.disputeDebitCount = disputeDebitCount;
  }


  public SettlementEngineSettlement exception(Boolean exception) {
    
    this.exception = exception;
    return this;
  }

   /**
   * Get exception
   * @return exception
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getException() {
    return exception;
  }


  public void setException(Boolean exception) {
    this.exception = exception;
  }


  public SettlementEngineSettlement feeCount(BigDecimal feeCount) {
    
    this.feeCount = feeCount;
    return this;
  }

   /**
   * Get feeCount
   * @return feeCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getFeeCount() {
    return feeCount;
  }


  public void setFeeCount(BigDecimal feeCount) {
    this.feeCount = feeCount;
  }


  public SettlementEngineSettlement identity(String identity) {
    
    this.identity = identity;
    return this;
  }

   /**
   * The ID of the resource.
   * @return identity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the resource.")

  public String getIdentity() {
    return identity;
  }


  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public SettlementEngineSettlement merchant(String merchant) {
    
    this.merchant = merchant;
    return this;
  }

   /**
   * The ID of the resource.
   * @return merchant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The ID of the resource.")

  public String getMerchant() {
    return merchant;
  }


  public void setMerchant(String merchant) {
    this.merchant = merchant;
  }


  public SettlementEngineSettlement payoutPlan(String payoutPlan) {
    
    this.payoutPlan = payoutPlan;
    return this;
  }

   /**
   * Get payoutPlan
   * @return payoutPlan
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPayoutPlan() {
    return payoutPlan;
  }


  public void setPayoutPlan(String payoutPlan) {
    this.payoutPlan = payoutPlan;
  }


  public SettlementEngineSettlement processorType(String processorType) {
    
    this.processorType = processorType;
    return this;
  }

   /**
   * Get processorType
   * @return processorType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getProcessorType() {
    return processorType;
  }


  public void setProcessorType(String processorType) {
    this.processorType = processorType;
  }


  public SettlementEngineSettlement reverseAmount(BigDecimal reverseAmount) {
    
    this.reverseAmount = reverseAmount;
    return this;
  }

   /**
   * Get reverseAmount
   * @return reverseAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getReverseAmount() {
    return reverseAmount;
  }


  public void setReverseAmount(BigDecimal reverseAmount) {
    this.reverseAmount = reverseAmount;
  }


  public SettlementEngineSettlement reverseCount(BigDecimal reverseCount) {
    
    this.reverseCount = reverseCount;
    return this;
  }

   /**
   * Get reverseCount
   * @return reverseCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getReverseCount() {
    return reverseCount;
  }


  public void setReverseCount(BigDecimal reverseCount) {
    this.reverseCount = reverseCount;
  }


  public SettlementEngineSettlement scheduleType(ScheduleTypeEnum scheduleType) {
    
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Get scheduleType
   * @return scheduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public ScheduleTypeEnum getScheduleType() {
    return scheduleType;
  }


  public void setScheduleType(ScheduleTypeEnum scheduleType) {
    this.scheduleType = scheduleType;
  }


  public SettlementEngineSettlement settlementGroup(String settlementGroup) {
    
    this.settlementGroup = settlementGroup;
    return this;
  }

   /**
   * Get settlementGroup
   * @return settlementGroup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSettlementGroup() {
    return settlementGroup;
  }


  public void setSettlementGroup(String settlementGroup) {
    this.settlementGroup = settlementGroup;
  }


  public SettlementEngineSettlement status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public SettlementEngineSettlement totalAmount(BigDecimal totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * Get totalAmount
   * @return totalAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTotalAmount() {
    return totalAmount;
  }


  public void setTotalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }


  public SettlementEngineSettlement totalFeeAmount(BigDecimal totalFeeAmount) {
    
    this.totalFeeAmount = totalFeeAmount;
    return this;
  }

   /**
   * Get totalFeeAmount
   * @return totalFeeAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTotalFeeAmount() {
    return totalFeeAmount;
  }


  public void setTotalFeeAmount(BigDecimal totalFeeAmount) {
    this.totalFeeAmount = totalFeeAmount;
  }


  public SettlementEngineSettlement transferCreditAmount(BigDecimal transferCreditAmount) {
    
    this.transferCreditAmount = transferCreditAmount;
    return this;
  }

   /**
   * Get transferCreditAmount
   * @return transferCreditAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTransferCreditAmount() {
    return transferCreditAmount;
  }


  public void setTransferCreditAmount(BigDecimal transferCreditAmount) {
    this.transferCreditAmount = transferCreditAmount;
  }


  public SettlementEngineSettlement transferCreditCount(BigDecimal transferCreditCount) {
    
    this.transferCreditCount = transferCreditCount;
    return this;
  }

   /**
   * Get transferCreditCount
   * @return transferCreditCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTransferCreditCount() {
    return transferCreditCount;
  }


  public void setTransferCreditCount(BigDecimal transferCreditCount) {
    this.transferCreditCount = transferCreditCount;
  }


  public SettlementEngineSettlement transferDebitAmount(BigDecimal transferDebitAmount) {
    
    this.transferDebitAmount = transferDebitAmount;
    return this;
  }

   /**
   * Get transferDebitAmount
   * @return transferDebitAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTransferDebitAmount() {
    return transferDebitAmount;
  }


  public void setTransferDebitAmount(BigDecimal transferDebitAmount) {
    this.transferDebitAmount = transferDebitAmount;
  }


  public SettlementEngineSettlement transferDebitCount(BigDecimal transferDebitCount) {
    
    this.transferDebitCount = transferDebitCount;
    return this;
  }

   /**
   * Get transferDebitCount
   * @return transferDebitCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTransferDebitCount() {
    return transferDebitCount;
  }


  public void setTransferDebitCount(BigDecimal transferDebitCount) {
    this.transferDebitCount = transferDebitCount;
  }


  public SettlementEngineSettlement windowEnd(OffsetDateTime windowEnd) {
    
    this.windowEnd = windowEnd;
    return this;
  }

   /**
   * Get windowEnd
   * @return windowEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getWindowEnd() {
    return windowEnd;
  }


  public void setWindowEnd(OffsetDateTime windowEnd) {
    this.windowEnd = windowEnd;
  }


  public SettlementEngineSettlement windowStart(OffsetDateTime windowStart) {
    
    this.windowStart = windowStart;
    return this;
  }

   /**
   * Get windowStart
   * @return windowStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getWindowStart() {
    return windowStart;
  }


  public void setWindowStart(OffsetDateTime windowStart) {
    this.windowStart = windowStart;
  }


  public SettlementEngineSettlement links(SettlementEngineSettlementLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SettlementEngineSettlementLinks getLinks() {
    return links;
  }


  public void setLinks(SettlementEngineSettlementLinks links) {
    this.links = links;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettlementEngineSettlement settlementEngineSettlement = (SettlementEngineSettlement) o;
    return Objects.equals(this.tags, settlementEngineSettlement.tags) &&
        Objects.equals(this.id, settlementEngineSettlement.id) &&
        Objects.equals(this.createdAt, settlementEngineSettlement.createdAt) &&
        Objects.equals(this.updatedAt, settlementEngineSettlement.updatedAt) &&
        Objects.equals(this.adjustmentCreditAmount, settlementEngineSettlement.adjustmentCreditAmount) &&
        Objects.equals(this.adjustmentCreditCount, settlementEngineSettlement.adjustmentCreditCount) &&
        Objects.equals(this.adjustmentDebitAmount, settlementEngineSettlement.adjustmentDebitAmount) &&
        Objects.equals(this.adjustmentDebitCount, settlementEngineSettlement.adjustmentDebitCount) &&
        Objects.equals(this.application, settlementEngineSettlement.application) &&
        Objects.equals(this.autoCloseTime, settlementEngineSettlement.autoCloseTime) &&
        Objects.equals(this.currency, settlementEngineSettlement.currency) &&
        Objects.equals(this.disputeCreditAmount, settlementEngineSettlement.disputeCreditAmount) &&
        Objects.equals(this.disputeCreditCount, settlementEngineSettlement.disputeCreditCount) &&
        Objects.equals(this.disputeDebitAmount, settlementEngineSettlement.disputeDebitAmount) &&
        Objects.equals(this.disputeDebitCount, settlementEngineSettlement.disputeDebitCount) &&
        Objects.equals(this.exception, settlementEngineSettlement.exception) &&
        Objects.equals(this.feeCount, settlementEngineSettlement.feeCount) &&
        Objects.equals(this.identity, settlementEngineSettlement.identity) &&
        Objects.equals(this.merchant, settlementEngineSettlement.merchant) &&
        Objects.equals(this.payoutPlan, settlementEngineSettlement.payoutPlan) &&
        Objects.equals(this.processorType, settlementEngineSettlement.processorType) &&
        Objects.equals(this.reverseAmount, settlementEngineSettlement.reverseAmount) &&
        Objects.equals(this.reverseCount, settlementEngineSettlement.reverseCount) &&
        Objects.equals(this.scheduleType, settlementEngineSettlement.scheduleType) &&
        Objects.equals(this.settlementGroup, settlementEngineSettlement.settlementGroup) &&
        Objects.equals(this.status, settlementEngineSettlement.status) &&
        Objects.equals(this.totalAmount, settlementEngineSettlement.totalAmount) &&
        Objects.equals(this.totalFeeAmount, settlementEngineSettlement.totalFeeAmount) &&
        Objects.equals(this.transferCreditAmount, settlementEngineSettlement.transferCreditAmount) &&
        Objects.equals(this.transferCreditCount, settlementEngineSettlement.transferCreditCount) &&
        Objects.equals(this.transferDebitAmount, settlementEngineSettlement.transferDebitAmount) &&
        Objects.equals(this.transferDebitCount, settlementEngineSettlement.transferDebitCount) &&
        Objects.equals(this.windowEnd, settlementEngineSettlement.windowEnd) &&
        Objects.equals(this.windowStart, settlementEngineSettlement.windowStart) &&
        Objects.equals(this.links, settlementEngineSettlement.links);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, id, createdAt, updatedAt, adjustmentCreditAmount, adjustmentCreditCount, adjustmentDebitAmount, adjustmentDebitCount, application, autoCloseTime, currency, disputeCreditAmount, disputeCreditCount, disputeDebitAmount, disputeDebitCount, exception, feeCount, identity, merchant, payoutPlan, processorType, reverseAmount, reverseCount, scheduleType, settlementGroup, status, totalAmount, totalFeeAmount, transferCreditAmount, transferCreditCount, transferDebitAmount, transferDebitCount, windowEnd, windowStart, links);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementEngineSettlement {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    adjustmentCreditAmount: ").append(toIndentedString(adjustmentCreditAmount)).append("\n");
    sb.append("    adjustmentCreditCount: ").append(toIndentedString(adjustmentCreditCount)).append("\n");
    sb.append("    adjustmentDebitAmount: ").append(toIndentedString(adjustmentDebitAmount)).append("\n");
    sb.append("    adjustmentDebitCount: ").append(toIndentedString(adjustmentDebitCount)).append("\n");
    sb.append("    application: ").append(toIndentedString(application)).append("\n");
    sb.append("    autoCloseTime: ").append(toIndentedString(autoCloseTime)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    disputeCreditAmount: ").append(toIndentedString(disputeCreditAmount)).append("\n");
    sb.append("    disputeCreditCount: ").append(toIndentedString(disputeCreditCount)).append("\n");
    sb.append("    disputeDebitAmount: ").append(toIndentedString(disputeDebitAmount)).append("\n");
    sb.append("    disputeDebitCount: ").append(toIndentedString(disputeDebitCount)).append("\n");
    sb.append("    exception: ").append(toIndentedString(exception)).append("\n");
    sb.append("    feeCount: ").append(toIndentedString(feeCount)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    payoutPlan: ").append(toIndentedString(payoutPlan)).append("\n");
    sb.append("    processorType: ").append(toIndentedString(processorType)).append("\n");
    sb.append("    reverseAmount: ").append(toIndentedString(reverseAmount)).append("\n");
    sb.append("    reverseCount: ").append(toIndentedString(reverseCount)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    settlementGroup: ").append(toIndentedString(settlementGroup)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    totalFeeAmount: ").append(toIndentedString(totalFeeAmount)).append("\n");
    sb.append("    transferCreditAmount: ").append(toIndentedString(transferCreditAmount)).append("\n");
    sb.append("    transferCreditCount: ").append(toIndentedString(transferCreditCount)).append("\n");
    sb.append("    transferDebitAmount: ").append(toIndentedString(transferDebitAmount)).append("\n");
    sb.append("    transferDebitCount: ").append(toIndentedString(transferDebitCount)).append("\n");
    sb.append("    windowEnd: ").append(toIndentedString(windowEnd)).append("\n");
    sb.append("    windowStart: ").append(toIndentedString(windowStart)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("id");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("adjustment_credit_amount");
    openapiFields.add("adjustment_credit_count");
    openapiFields.add("adjustment_debit_amount");
    openapiFields.add("adjustment_debit_count");
    openapiFields.add("application");
    openapiFields.add("auto_close_time");
    openapiFields.add("currency");
    openapiFields.add("dispute_credit_amount");
    openapiFields.add("dispute_credit_count");
    openapiFields.add("dispute_debit_amount");
    openapiFields.add("dispute_debit_count");
    openapiFields.add("exception");
    openapiFields.add("fee_count");
    openapiFields.add("identity");
    openapiFields.add("merchant");
    openapiFields.add("payout_plan");
    openapiFields.add("processor_type");
    openapiFields.add("reverse_amount");
    openapiFields.add("reverse_count");
    openapiFields.add("schedule_type");
    openapiFields.add("settlement_group");
    openapiFields.add("status");
    openapiFields.add("total_amount");
    openapiFields.add("total_fee_amount");
    openapiFields.add("transfer_credit_amount");
    openapiFields.add("transfer_credit_count");
    openapiFields.add("transfer_debit_amount");
    openapiFields.add("transfer_debit_count");
    openapiFields.add("window_end");
    openapiFields.add("window_start");
    openapiFields.add("_links");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("updated_at");
    openapiRequiredFields.add("adjustment_credit_amount");
    openapiRequiredFields.add("adjustment_credit_count");
    openapiRequiredFields.add("adjustment_debit_amount");
    openapiRequiredFields.add("adjustment_debit_count");
    openapiRequiredFields.add("application");
    openapiRequiredFields.add("auto_close_time");
    openapiRequiredFields.add("dispute_credit_amount");
    openapiRequiredFields.add("dispute_credit_count");
    openapiRequiredFields.add("dispute_debit_amount");
    openapiRequiredFields.add("dispute_debit_count");
    openapiRequiredFields.add("exception");
    openapiRequiredFields.add("fee_count");
    openapiRequiredFields.add("merchant");
    openapiRequiredFields.add("payout_plan");
    openapiRequiredFields.add("processor_type");
    openapiRequiredFields.add("reverse_amount");
    openapiRequiredFields.add("reverse_count");
    openapiRequiredFields.add("schedule_type");
    openapiRequiredFields.add("settlement_group");
    openapiRequiredFields.add("total_amount");
    openapiRequiredFields.add("total_fee_amount");
    openapiRequiredFields.add("transfer_credit_amount");
    openapiRequiredFields.add("transfer_credit_count");
    openapiRequiredFields.add("transfer_debit_amount");
    openapiRequiredFields.add("transfer_debit_count");
    openapiRequiredFields.add("window_end");
    openapiRequiredFields.add("window_start");
    openapiRequiredFields.add("_links");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SettlementEngineSettlement
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SettlementEngineSettlement.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SettlementEngineSettlement is not found in the empty JSON string", SettlementEngineSettlement.openapiRequiredFields.toString()));
        }
      }
     /* 

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SettlementEngineSettlement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SettlementEngineSettlement` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      */

      // check to make sure all required properties/fields are present in the JSON string
      /*for (String requiredField : SettlementEngineSettlement.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }*/
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()  && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("application") != null && !jsonObj.get("application").isJsonNull()  && !jsonObj.get("application").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `application` to be a primitive type in the JSON string but got `%s`", jsonObj.get("application").toString()));
      }
      if (jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()  && !jsonObj.get("identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity").toString()));
      }
      if (jsonObj.get("merchant") != null && !jsonObj.get("merchant").isJsonNull()  && !jsonObj.get("merchant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant").toString()));
      }
      if (jsonObj.get("payout_plan") != null && !jsonObj.get("payout_plan").isJsonNull()  && !jsonObj.get("payout_plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payout_plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payout_plan").toString()));
      }
      if (jsonObj.get("processor_type") != null && !jsonObj.get("processor_type").isJsonNull()  && !jsonObj.get("processor_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processor_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processor_type").toString()));
      }
      if (jsonObj.get("schedule_type") != null && !jsonObj.get("schedule_type").isJsonNull()  && !jsonObj.get("schedule_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_type").toString()));
      }
      if (jsonObj.get("settlement_group") != null && !jsonObj.get("settlement_group").isJsonNull()  && !jsonObj.get("settlement_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `settlement_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("settlement_group").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()  && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `_links`
      if (jsonObj.getAsJsonObject("_links") != null) {
       SettlementEngineSettlementLinks.validateJsonObject(jsonObj.getAsJsonObject("_links"));
      }
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SettlementEngineSettlement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SettlementEngineSettlement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SettlementEngineSettlement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SettlementEngineSettlement.class));

       return (TypeAdapter<T>) new TypeAdapter<SettlementEngineSettlement>() {
           @Override
           public void write(JsonWriter out, SettlementEngineSettlement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SettlementEngineSettlement read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SettlementEngineSettlement given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SettlementEngineSettlement
  * @throws IOException if the JSON string is invalid with respect to SettlementEngineSettlement
  */
  public static SettlementEngineSettlement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SettlementEngineSettlement.class);
  }

 /**
  * Convert an instance of SettlementEngineSettlement to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

