/*
 * Finix API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018-01-01
 * Contact: support@finixpayments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import model.CashbackOptions;
import model.TipOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import invoker.JSON;

/**
 * DeviceConfigurationForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-27T11:05:36.428255-05:00[America/Chicago]")
public class DeviceConfigurationForm {
  public static final String SERIALIZED_NAME_ALLOW_DEBIT = "allow_debit";
  @SerializedName(SERIALIZED_NAME_ALLOW_DEBIT)
  private Boolean allowDebit;

  public static final String SERIALIZED_NAME_ALLOW_PARTIAL_APPROVALS = "allow_partial_approvals";
  @SerializedName(SERIALIZED_NAME_ALLOW_PARTIAL_APPROVALS)
  private Boolean allowPartialApprovals;

  public static final String SERIALIZED_NAME_CASHBACK_OPTIONS = "cashback_options";
  @SerializedName(SERIALIZED_NAME_CASHBACK_OPTIONS)
  private CashbackOptions cashbackOptions;

  public static final String SERIALIZED_NAME_CHECK_FOR_DUPLICATE_TRANSACTIONS = "check_for_duplicate_transactions";
  @SerializedName(SERIALIZED_NAME_CHECK_FOR_DUPLICATE_TRANSACTIONS)
  private Boolean checkForDuplicateTransactions;

  public static final String SERIALIZED_NAME_IS_CASH_BACK_ALLOWED = "is_cash_back_allowed";
  @SerializedName(SERIALIZED_NAME_IS_CASH_BACK_ALLOWED)
  private Boolean isCashBackAllowed;

  public static final String SERIALIZED_NAME_IS_GIFT_SUPPORTED = "is_gift_supported";
  @SerializedName(SERIALIZED_NAME_IS_GIFT_SUPPORTED)
  private String isGiftSupported;

  public static final String SERIALIZED_NAME_IS_MANUAL_ENTRY_ALLOWED = "is_manual_entry_allowed";
  @SerializedName(SERIALIZED_NAME_IS_MANUAL_ENTRY_ALLOWED)
  private Boolean isManualEntryAllowed;

  public static final String SERIALIZED_NAME_MARKET_CODE = "market_code";
  @SerializedName(SERIALIZED_NAME_MARKET_CODE)
  private String marketCode;

  public static final String SERIALIZED_NAME_PROMPT_AMOUNT_CONFIRMATION = "prompt_amount_confirmation";
  @SerializedName(SERIALIZED_NAME_PROMPT_AMOUNT_CONFIRMATION)
  private Boolean promptAmountConfirmation;

  public static final String SERIALIZED_NAME_PROMPT_MANUAL_ENTRY = "prompt_manual_entry";
  @SerializedName(SERIALIZED_NAME_PROMPT_MANUAL_ENTRY)
  private Boolean promptManualEntry;

  public static final String SERIALIZED_NAME_PROMPT_SIGNATURE = "prompt_signature";
  @SerializedName(SERIALIZED_NAME_PROMPT_SIGNATURE)
  private String promptSignature;

  public static final String SERIALIZED_NAME_SIGNATURE_THRESHOLD_AMOUNT = "signature_threshold_amount";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_THRESHOLD_AMOUNT)
  private Long signatureThresholdAmount;

  public static final String SERIALIZED_NAME_TIP_OPTIONS = "tip_options";
  @SerializedName(SERIALIZED_NAME_TIP_OPTIONS)
  private TipOptions tipOptions;

  public DeviceConfigurationForm() { 
  }

  public DeviceConfigurationForm allowDebit(Boolean allowDebit) {
    
    this.allowDebit = allowDebit;
    return this;
  }

   /**
   * Get allowDebit
   * @return allowDebit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowDebit() {
    return allowDebit;
  }


  public void setAllowDebit(Boolean allowDebit) {
    this.allowDebit = allowDebit;
  }


  public DeviceConfigurationForm allowPartialApprovals(Boolean allowPartialApprovals) {
    
    this.allowPartialApprovals = allowPartialApprovals;
    return this;
  }

   /**
   * Get allowPartialApprovals
   * @return allowPartialApprovals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowPartialApprovals() {
    return allowPartialApprovals;
  }


  public void setAllowPartialApprovals(Boolean allowPartialApprovals) {
    this.allowPartialApprovals = allowPartialApprovals;
  }


  public DeviceConfigurationForm cashbackOptions(CashbackOptions cashbackOptions) {
    
    this.cashbackOptions = cashbackOptions;
    return this;
  }

   /**
   * Get cashbackOptions
   * @return cashbackOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CashbackOptions getCashbackOptions() {
    return cashbackOptions;
  }


  public void setCashbackOptions(CashbackOptions cashbackOptions) {
    this.cashbackOptions = cashbackOptions;
  }


  public DeviceConfigurationForm checkForDuplicateTransactions(Boolean checkForDuplicateTransactions) {
    
    this.checkForDuplicateTransactions = checkForDuplicateTransactions;
    return this;
  }

   /**
   * Get checkForDuplicateTransactions
   * @return checkForDuplicateTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCheckForDuplicateTransactions() {
    return checkForDuplicateTransactions;
  }


  public void setCheckForDuplicateTransactions(Boolean checkForDuplicateTransactions) {
    this.checkForDuplicateTransactions = checkForDuplicateTransactions;
  }


  public DeviceConfigurationForm isCashBackAllowed(Boolean isCashBackAllowed) {
    
    this.isCashBackAllowed = isCashBackAllowed;
    return this;
  }

   /**
   * Get isCashBackAllowed
   * @return isCashBackAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCashBackAllowed() {
    return isCashBackAllowed;
  }


  public void setIsCashBackAllowed(Boolean isCashBackAllowed) {
    this.isCashBackAllowed = isCashBackAllowed;
  }


  public DeviceConfigurationForm isGiftSupported(String isGiftSupported) {
    
    this.isGiftSupported = isGiftSupported;
    return this;
  }

   /**
   * Get isGiftSupported
   * @return isGiftSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsGiftSupported() {
    return isGiftSupported;
  }


  public void setIsGiftSupported(String isGiftSupported) {
    this.isGiftSupported = isGiftSupported;
  }


  public DeviceConfigurationForm isManualEntryAllowed(Boolean isManualEntryAllowed) {
    
    this.isManualEntryAllowed = isManualEntryAllowed;
    return this;
  }

   /**
   * Get isManualEntryAllowed
   * @return isManualEntryAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsManualEntryAllowed() {
    return isManualEntryAllowed;
  }


  public void setIsManualEntryAllowed(Boolean isManualEntryAllowed) {
    this.isManualEntryAllowed = isManualEntryAllowed;
  }


  public DeviceConfigurationForm marketCode(String marketCode) {
    
    this.marketCode = marketCode;
    return this;
  }

   /**
   * Get marketCode
   * @return marketCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMarketCode() {
    return marketCode;
  }


  public void setMarketCode(String marketCode) {
    this.marketCode = marketCode;
  }


  public DeviceConfigurationForm promptAmountConfirmation(Boolean promptAmountConfirmation) {
    
    this.promptAmountConfirmation = promptAmountConfirmation;
    return this;
  }

   /**
   * Get promptAmountConfirmation
   * @return promptAmountConfirmation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPromptAmountConfirmation() {
    return promptAmountConfirmation;
  }


  public void setPromptAmountConfirmation(Boolean promptAmountConfirmation) {
    this.promptAmountConfirmation = promptAmountConfirmation;
  }


  public DeviceConfigurationForm promptManualEntry(Boolean promptManualEntry) {
    
    this.promptManualEntry = promptManualEntry;
    return this;
  }

   /**
   * Get promptManualEntry
   * @return promptManualEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPromptManualEntry() {
    return promptManualEntry;
  }


  public void setPromptManualEntry(Boolean promptManualEntry) {
    this.promptManualEntry = promptManualEntry;
  }


  public DeviceConfigurationForm promptSignature(String promptSignature) {
    
    this.promptSignature = promptSignature;
    return this;
  }

   /**
   * Get promptSignature
   * @return promptSignature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPromptSignature() {
    return promptSignature;
  }


  public void setPromptSignature(String promptSignature) {
    this.promptSignature = promptSignature;
  }


  public DeviceConfigurationForm signatureThresholdAmount(Long signatureThresholdAmount) {
    
    this.signatureThresholdAmount = signatureThresholdAmount;
    return this;
  }

   /**
   * Get signatureThresholdAmount
   * @return signatureThresholdAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getSignatureThresholdAmount() {
    return signatureThresholdAmount;
  }


  public void setSignatureThresholdAmount(Long signatureThresholdAmount) {
    this.signatureThresholdAmount = signatureThresholdAmount;
  }


  public DeviceConfigurationForm tipOptions(TipOptions tipOptions) {
    
    this.tipOptions = tipOptions;
    return this;
  }

   /**
   * Get tipOptions
   * @return tipOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TipOptions getTipOptions() {
    return tipOptions;
  }


  public void setTipOptions(TipOptions tipOptions) {
    this.tipOptions = tipOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceConfigurationForm deviceConfigurationForm = (DeviceConfigurationForm) o;
    return Objects.equals(this.allowDebit, deviceConfigurationForm.allowDebit) &&
        Objects.equals(this.allowPartialApprovals, deviceConfigurationForm.allowPartialApprovals) &&
        Objects.equals(this.cashbackOptions, deviceConfigurationForm.cashbackOptions) &&
        Objects.equals(this.checkForDuplicateTransactions, deviceConfigurationForm.checkForDuplicateTransactions) &&
        Objects.equals(this.isCashBackAllowed, deviceConfigurationForm.isCashBackAllowed) &&
        Objects.equals(this.isGiftSupported, deviceConfigurationForm.isGiftSupported) &&
        Objects.equals(this.isManualEntryAllowed, deviceConfigurationForm.isManualEntryAllowed) &&
        Objects.equals(this.marketCode, deviceConfigurationForm.marketCode) &&
        Objects.equals(this.promptAmountConfirmation, deviceConfigurationForm.promptAmountConfirmation) &&
        Objects.equals(this.promptManualEntry, deviceConfigurationForm.promptManualEntry) &&
        Objects.equals(this.promptSignature, deviceConfigurationForm.promptSignature) &&
        Objects.equals(this.signatureThresholdAmount, deviceConfigurationForm.signatureThresholdAmount) &&
        Objects.equals(this.tipOptions, deviceConfigurationForm.tipOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowDebit, allowPartialApprovals, cashbackOptions, checkForDuplicateTransactions, isCashBackAllowed, isGiftSupported, isManualEntryAllowed, marketCode, promptAmountConfirmation, promptManualEntry, promptSignature, signatureThresholdAmount, tipOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceConfigurationForm {\n");
    sb.append("    allowDebit: ").append(toIndentedString(allowDebit)).append("\n");
    sb.append("    allowPartialApprovals: ").append(toIndentedString(allowPartialApprovals)).append("\n");
    sb.append("    cashbackOptions: ").append(toIndentedString(cashbackOptions)).append("\n");
    sb.append("    checkForDuplicateTransactions: ").append(toIndentedString(checkForDuplicateTransactions)).append("\n");
    sb.append("    isCashBackAllowed: ").append(toIndentedString(isCashBackAllowed)).append("\n");
    sb.append("    isGiftSupported: ").append(toIndentedString(isGiftSupported)).append("\n");
    sb.append("    isManualEntryAllowed: ").append(toIndentedString(isManualEntryAllowed)).append("\n");
    sb.append("    marketCode: ").append(toIndentedString(marketCode)).append("\n");
    sb.append("    promptAmountConfirmation: ").append(toIndentedString(promptAmountConfirmation)).append("\n");
    sb.append("    promptManualEntry: ").append(toIndentedString(promptManualEntry)).append("\n");
    sb.append("    promptSignature: ").append(toIndentedString(promptSignature)).append("\n");
    sb.append("    signatureThresholdAmount: ").append(toIndentedString(signatureThresholdAmount)).append("\n");
    sb.append("    tipOptions: ").append(toIndentedString(tipOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_debit");
    openapiFields.add("allow_partial_approvals");
    openapiFields.add("cashback_options");
    openapiFields.add("check_for_duplicate_transactions");
    openapiFields.add("is_cash_back_allowed");
    openapiFields.add("is_gift_supported");
    openapiFields.add("is_manual_entry_allowed");
    openapiFields.add("market_code");
    openapiFields.add("prompt_amount_confirmation");
    openapiFields.add("prompt_manual_entry");
    openapiFields.add("prompt_signature");
    openapiFields.add("signature_threshold_amount");
    openapiFields.add("tip_options");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DeviceConfigurationForm
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DeviceConfigurationForm.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeviceConfigurationForm is not found in the empty JSON string", DeviceConfigurationForm.openapiRequiredFields.toString()));
        }
      }
     /* 

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DeviceConfigurationForm.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeviceConfigurationForm` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      */
      // validate the optional field `cashback_options`
      if (jsonObj.getAsJsonObject("cashback_options") != null) {
       CashbackOptions.validateJsonObject(jsonObj.getAsJsonObject("cashback_options"));
      }
      if (jsonObj.get("is_gift_supported") != null && !jsonObj.get("is_gift_supported").isJsonNull()  && !jsonObj.get("is_gift_supported").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_gift_supported` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_gift_supported").toString()));
      }
      if (jsonObj.get("market_code") != null && !jsonObj.get("market_code").isJsonNull()  && !jsonObj.get("market_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `market_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("market_code").toString()));
      }
      if (jsonObj.get("prompt_signature") != null && !jsonObj.get("prompt_signature").isJsonNull()  && !jsonObj.get("prompt_signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prompt_signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prompt_signature").toString()));
      }
      // validate the optional field `tip_options`
      if (jsonObj.getAsJsonObject("tip_options") != null) {
       TipOptions.validateJsonObject(jsonObj.getAsJsonObject("tip_options"));
      }
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeviceConfigurationForm.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeviceConfigurationForm' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeviceConfigurationForm> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeviceConfigurationForm.class));

       return (TypeAdapter<T>) new TypeAdapter<DeviceConfigurationForm>() {
           @Override
           public void write(JsonWriter out, DeviceConfigurationForm value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeviceConfigurationForm read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DeviceConfigurationForm given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DeviceConfigurationForm
  * @throws IOException if the JSON string is invalid with respect to DeviceConfigurationForm
  */
  public static DeviceConfigurationForm fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeviceConfigurationForm.class);
  }

 /**
  * Convert an instance of DeviceConfigurationForm to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

